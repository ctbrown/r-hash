% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/values.R
\docType{methods}
\name{values}
\alias{values}
\alias{values,hash-method}
\alias{values<-}
\alias{values<-,hash,ANY-mehtod}
\alias{values<-,hash-method}
\title{values}
\usage{
values(x, ...)

\S4method{values}{hash}(x, keys = NULL, ...)

values(x, ...) <- value

\S4method{values}{hash}(x, ...) <- value
}
\arguments{
\item{x}{hash object}

\item{...}{additional arguments passed to sapply

The \code{values} method returns a named-list of key value pairs from a hash.
If a hash is desired, use the hash slice method, \code{h[x]}.

List elements are named after the corresponding key. In previous versions,
the return was simplified. This is no longer the case. Users should
simplify arguments if needed using \code{unlist} or similar. See examples.

If argument \code{keys} is provided, only these keys are
returned. This also allows for returning values mulitple times as in:

\code{values(h, keys=c( 'a','a','b' ) )}

This is now the preferred method for returning multiple values for the same
key.

The replacement method, \code{values<-} can replace all the values or simply
those associated with the supplied \code{keys}.  Use of the accessor '[' is
almost always preferred.}

\item{keys}{character; names of keys to get}

\item{value}{to be set}
}
\value{
A named list. Names are those of the keys, values are the associated hash
values.
}
\description{
Get/set values for a hash object
}
\examples{
  h <- hash( letters, 1:26 )
  values(h)  # 1:26

  h <- hash( 1:26, letters )
  values(h) 
  values(h, keys=1:5 )
  values(h, keys=c(1,1,1:5) )
  
  values(h, keys=1:5) <- 6:10 
  values(h) <- rev( letters )
      
  # When values are obejcts     
  h <- hash( c('a','b'), Sys.time() )
  class(h$a)             # "POSIXct" "POSIXt"
  vals <- values( h )    
  class( unlist(vals) )            # numeric
  class( Reduce( c, vals ) )       # "POSIXct" "POSIXt" 
  
  vals <- values(h)
  class(vals)            # List
  class( Reduce( c, vals ) ) # "POSIXct" "POSIXt"
  
}
\seealso{
\code{\link[hash:extract]{hash::extract()}} for R-like accessors
}
